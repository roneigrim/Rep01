<?xml version="1.0" encoding="UTF-8"?><server description="zosmfServer">
    <featureManager>
        <feature>zosSecurity-1.0</feature>
        <feature>appSecurity-2.0</feature>
        <feature>servlet-3.0</feature>
        <feature>jsp-2.2</feature>
        <feature>ssl-1.0</feature>
        <feature>zosWlm-1.0</feature>
        <feature>concurrent-1.0</feature>
         <feature>jndi-1.0</feature>
         <feature>webCache-1.0</feature>
         <feature>jaxrs-1.1</feature> 
         <feature>javaMail-1.5</feature>        
    </featureManager>
 
    <!-- Disable monitoring of files to reduce idle CPU -->
    <applicationMonitor dropinsEnabled="false" locationMonitoringEnabled="false" updateTrigger="disabled"/>
    <config updateTrigger="disabled"/>
 
    <!-- Allow servlets to load at server startup -->
    <webContainer deferServletLoad="false" ignoreInvalidQueryString="true"/>
 
    <!-- web cache for dynacache -->
    <distributedMap id="zosmfDistributedMap" memorySizeInEntries="${izu.dmap.mem.size.in.entries}">
    </distributedMap>
 
    <!-- SAF -->
 
    <safRegistry id="saf" realm="${izu.user.registry.realm}">
    </safRegistry>
    <safAuthorization/>
    <safCredentials profilePrefix="${izu.profile.prefix}" unauthenticatedUser="${izu.unauthenticated.user}"/>
    
    <!-- Enable SyncToOSThread -->
 
    <syncToOSThread appEnabled="true"/>
 
    <!-- SSL -->
    <sslDefault sslRef="${izu.ssl.config}"/>
    <ssl clientAuthenticationSupported="${izu.ssl.client.auth.supported}" enabledCiphers="${izu.ciphers.list}" id="${izu.ssl.config}" keyStoreRef="defaultKeyStore" sslProtocol="${izu.ssl.Protocol}"/>
    <keyStore fileBased="false" id="defaultKeyStore" location="safkeyringhybrid://${izu.ssl.key.store.owner.userid}/${izu.ssl.key.store.saf.keyring}" password="${izu.ssl.key.store.password}" readOnly="true" type="${izu.ssl.key.store.type}"/>
 
    <!-- LTPA -->
    <ltpa expiration="${izu.ltpa.expiration}" keysFileName="${izu.ltpa.key.file.name}" keysPassword="${izu.ltpa.key.password}"/>
    <authCache timeout="${izu.authCache.timeout}"/>
    <webAppSecurity allowFailOverToBasicAuth="true" ssoDomainNames="${izu.sso.domain.names}" ssoRequiresSSL="true" ssoUseDomainFromURL="${izu.sso.usedomainfromurl}"/>
 
    <!-- HTTP -->
    <httpAccessLogging enabled="${izu.http.logging.switch}" id="accessLogging" logFormat="${izu.http.logging.logformat}" maxFileSize="${izu.http.logging.maxfilesize}" maxFiles="${izu.http.logging.maxfiles}"/>
    <httpEndpoint accessLoggingRef="accessLogging" host="${izu.hostname}" httpPort="${izu.http.port}" httpsPort="${izu.https.port}" id="defaultHttpEndpoint">
        <tcpOptions listenBacklog="${izu.listenBacklog}" soReuseAddr="true"/>
    </httpEndpoint>
    
    <!-- HTTP session -->
    <httpSession cookieSecure="true" invalidateOnUnauthorizedSessionRequestException="true" invalidationTimeout="${izu.session.timeout}"/>
 
    <!-- HTTP OPTIONS -->
    <httpOptions removeServerHeader="${izu.http.options.removeserverheader}"/>
        
    <!-- WLM HTTP classification -->
    
    <wlmClassification>
        <httpClassification resource="${izu.http.wlm.classification.resource}" transactionClass="${izu.http.wlm.transaction.class}"/>
    </wlmClassification>
    
    <!-- context service for work manager -->
    
    <contextService id="zosmfContext">
        <classloaderContext/>
        <jeeMetadataContext/>
        <securityContext/>
        <syncToOSThreadContext/>
        <zosWLMContext defaultTransactionClass="${izu.long.transaction.class}" wlm="${izu.long.wlm.context.option}"/>
    </contextService>
 
    <!-- context executor service for work manager -->
    <managedExecutorService contextServiceRef="zosmfContext" jndiName="${izu.long.concurrent.jndi}"/> 
 
    <!-- context schedule service for workflow -->
    <managedScheduledExecutorService contextServiceRef="zosmfContext" jndiName="${izu.scheduled.concurrent.jndi}"/>
    
    <!-- Increase Liberty Core Thread Pool to bypass limitation of Liberty thread management. -->
    <executor coreThreads="100" id="default" keepAlive="60s" maxThreads="0" name="LargeThreadPool" rejectedWorkPolicy="CALLER_RUNS" stealPolicy="STRICT"/>
    
    <!-- shared library for zosmf applications -->
 
    <library id="IzuZosmfSharedLibrary">
        <fileset dir="${izu.lib.dir}" includes="izugjni.jar"/>
        <fileset dir="${izu.wbem.root}/jclient" includes="JniBuffer.jar"/>
        <fileset dir="${izu.wbem.root}/jclient" includes="NativeCimClient.jar"/>
        <fileset dir="${izu.wbem.root}/jclient" includes="sblim-cim-client2.jar"/>
        <fileset dir="${izu.javaclasses.lib.dir}" includes="IRRRacf.jar"/>
        <fileset dir="${izu.lib.dir}" includes="JSON4J.jar"/>
        <fileset dir="${izu.lib.dir}" includes="izujesvsam.jar"/>
        <fileset dir="${izu.lib.dir}" includes="izujesstatus.jar"/>
        <fileset dir="${izu.lib.dir}" includes="izurestjobs.jar"/>
        <fileset dir="${izu.lib.dir}" includes="izurestjobsjni.jar"/>
        <fileset dir="${izu.lib.dir}" includes="izutsosrvjni.jar"/>
        <fileset dir="${izu.lib.dir}" includes="izurestfiles.jar"/>     
        <fileset dir="${izu.lib.dir}" includes="izuisjni.jar"/>
        <fileset dir="${izu.lib.dir}" includes="commons-pool2-2.3.jar"/>     
        <fileset dir="${izu.lib.dir}" includes="izuMessageQueue.jar"/>     
        <fileset dir="${izu.lib.dir}" includes="izuCeaTso.jar"/>
        <fileset dir="${wlp.install.dir}/lib" includes="${izu.spi.logging.lib}"/>
        <fileset dir="${wlp.install.dir}/lib" includes="${izu.spi.kernel.service.lib}"/>             
        <fileset dir="${wlp.install.dir}/lib" includes="${izu.spi.passwordutil.lib}"/>
        <fileset dir="${izu.lib.dir}" includes="*.so"/>
        <fileset dir="${izu.usr.lib.dir}" includes="*.so"/>
        <fileset dir="${izu.wbem.root}/lib" includes="*.so"/>
        <fileset dir="${izu.wbem.root}/provider" includes="*.so"/>
        <fileset dir="${izu.lib.dir}" includes="jackson-annotations-2.2.2.jar"/>
        <fileset dir="${izu.lib.dir}" includes="jackson-core-2.2.2.jar"/>
        <fileset dir="${izu.lib.dir}" includes="jackson-databind-2.2.2.jar"/>
        <fileset dir="${izu.lib.dir}" includes="jackson-jaxrs-base-2.2.2.jar"/>
        <fileset dir="${izu.lib.dir}" includes="jackson-jaxrs-json-provider-2.2.2.jar"/>
        <fileset dir="${izu.lib.dir}" includes="jackson-module-jsonSchema-2.2.2.jar"/>
    </library>
 
    <!-- private library for Workflow application -->
    
    <library id="IzuZosmfWorkflowPrivateLibrary">
       <fileset dir="${izu.lib.dir}" includes="commons-collections-3.2.2.jar"/>
       <fileset dir="${izu.lib.dir}" includes="commons-lang-2.4.jar"/>
       <fileset dir="${izu.lib.dir}" includes="velocity-1.7.jar"/>
    </library>   
    
    <!-- private library for Provisioning application -->    
	<library id="IzuZosmfProvisioningPrivateLibrary">
         <fileset dir="${izu.lib.dir}" includes="commons-collections-3.2.2.jar"/>
         <fileset dir="${izu.lib.dir}" includes="commons-lang-2.4.jar"/>
         <fileset dir="${izu.lib.dir}" includes="velocity-1.7.jar"/>
    </library> 
 
    <!-- core applications -->
 
    <application id="IzuManagementFacility" location="${izu.app.zosmf.dir}" name="IzuManagementFacility" type="ear">
        <classloader commonLibraryRef="${izu.shared.library}"/>
    </application>
 
    <application id="IzuManagementFacilityHelpApp" location="${izu.app.help.dir}" name="IzuManagementFacilityHelpApp" type="ear">
        <classloader commonLibraryRef="${izu.shared.library}" delegation="parentLast"/>
    </application>
 
    <application id="IzuManagementFacilityImportUtility" location="${izu.app.importutility.dir}" name="IzuManagementFacilityImportUtility" type="ear">
        <classloader commonLibraryRef="${izu.shared.library}"/>
    </application>
 
    <application id="IzuManagementFacilityRestJobs" location="${izu.app.restjobs.dir}" name="IzuManagementFacilityRestJobs" type="ear">
        <classloader commonLibraryRef="${izu.shared.library}"/>
    </application>
    
    <application id="IzuManagementFacilityTsoServices" location="${izu.app.tsosrv.dir}" name="IzuManagementFacilityTsoServices" type="ear">
        <classloader commonLibraryRef="${izu.shared.library}"/>
    </application>
    
    <application id="IzuManagementFacilityProvisioning" location="${izu.app.provisioning.dir}" name="IzuManagementFacilityProvisioning" type="ear">
        <classloader commonLibraryRef="${izu.shared.library}" privateLibraryRef="IzuZosmfProvisioningPrivateLibrary"/>  
    </application>
    
    <application id="IzuManagementFacilityVariables" location="${izu.app.variables.dir}" name="IzuManagementFacilityVariables" type="ear">
        <classloader commonLibraryRef="${izu.shared.library}"/>  
    </application>
    
    <application id="IzuManagementFacilityRestFiles" location="${izu.app.restfiles.dir}" name="IzuManagementFacilityRestFiles" type="ear">
        <classloader commonLibraryRef="${izu.shared.library}"/>  
    </application>
 
    <!-- Workflow application -->  
      
    <application id="IzuManagementFacilityWorkflow" location="${izu.app.Workflow.dir}" name="IzuManagementFacilityWorkflow" type="ear">
        <classloader commonLibraryRef="${izu.shared.library}" privateLibraryRef="IzuZosmfWorkflowPrivateLibrary"/>
    </application>   
    
    <!-- Console API application -->
    <application id="IzuManagementFacilityRestConsoles" location="${izu.app.dir}/izurestconsoles.ear" name="IzuManagementFacilityRestConsoles" type="ear">
        <classloader commonLibraryRef="${izu.shared.library}"/>  
    </application> 
      
        
    <!-- plugin applications -->
 
    <include location="${izu.xml.include.dir}/izucagui.xml" optional="true"/>
    <include location="${izu.xml.include.dir}/izucp.xml" optional="true"/>
    <include location="${izu.xml.include.dir}/izudDm.xml" optional="true"/>
    <include location="${izu.xml.include.dir}/izuIncidentLog.xml" optional="true"/>
    <include location="${izu.xml.include.dir}/izuis.xml" optional="true"/>
    <include location="${izu.xml.include.dir}/izurm.xml" optional="true"/>
    <include location="${izu.xml.include.dir}/izuwlm.xml" optional="true"/>    
    
   	<!-- JAAS Custom Login setup for Identity Assertion with Validation -->
    <jaasLoginContextEntry id="CloudIdentityAssertion" loginModuleRef="cloudAssertionLogin,identityAssertion" name="CloudIdentityAssertion"/>
    <jaasLoginModule className="com.ibm.zoszmf.util.auth.JAASIdentityAssertionLoginModule" controlFlag="REQUIRED" id="cloudAssertionLogin" libraryRef="IzuZosmfSharedLibrary"/>
    <jaasLoginModule className="com.ibm.wsspi.security.common.auth.module.IdentityAssertionLoginModule" controlFlag="REQUIRED" id="identityAssertion" libraryRef="IzuZosmfSharedLibrary"/>
 
<Signature xmlns="http://www.w3.org/2000/09/xmldsig#"><SignedInfo><CanonicalizationMethod Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315"/><SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1"/><Reference URI=""><Transforms><Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature"/><Transform Algorithm="http://www.w3.org/TR/1999/REC-xslt-19991116"><xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
<xsl:output encoding="UTF-8"/>
<xsl:strip-space elements="*"/>
<xsl:template match="@*|node()">
  <xsl:copy>
    <xsl:apply-templates select="@*|node()"/>
  </xsl:copy>
</xsl:template>
<xsl:template match="variable"/>
<xsl:template match="logging"/>
</xsl:stylesheet></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/><DigestValue>8IltvvqL7B1I+h1P+sE7vQHT6pc=</DigestValue></Reference></SignedInfo><SignatureValue>GSk8nwhF60U/uzzZx2yXzwzLlAChXsfWq8pKuNUeS2S8aLx5V3iWZpxkywgKyfZvaVahV+e2dFGNx/ho8DQJWJg/cZRpmAnXouINarhK4CXpREqcE1kVcTitzzGW5bppLuhL5x5uR40ynIN2raE1YGs02Hfh52CNP3GpLRu2QIqfUSZ6Jh5rvTiDy8p5Mb5wzsnF/mC/UBTY2l5khXYMPOhEGmMn8i1gS+n9dPHJrZWTm9vJNk24IaBW4FIhhlQEunW3jDCi51SJ/V77goTtPB3b9m+rdxJL49aXuvfkXlxehOUmJGZx3o1rXDbHepN8l6/UXcz2j6qnHsE8OMzh3w==</SignatureValue><KeyInfo><X509Data><X509SubjectName>CN=z/OSMF,OU=Systems &amp; Technology Group,O=IBM,L=Poughkeepsie,ST=New York,C=US</X509SubjectName><X509Certificate>MIIDsDCCApigAwIBAgIEUP3FADANBgkqhkiG9w0BAQsFADCBlTELMAkGA1UEBhMCVVMxETAPBgNVBAgTCE5ldyBZb3JrMQ8wDQYDVQQHEwZBcm1vbmsxEjAQBgNVBAoTCUlCTSBDb3JwLjEXMBUGA1UECxMOU29mdHdhcmUgR3JvdXAxNTAzBgNVBAMTLFdlYlNwaGVyZSBBcHBsaWNhdGlvbiBTZXJ2ZXIgTGliZXJ0eSBQcm9maWxlMB4XDTEzMDEyMTIyNDUyMFoXDTMzMDExNjIyNDUyMFowezELMAkGA1UEBhMCVVMxETAPBgNVBAgTCE5ldyBZb3JrMRUwEwYDVQQHEwxQb3VnaGtlZXBzaWUxDDAKBgNVBAoTA0lCTTEjMCEGA1UECwwaU3lzdGVtcyAmIFRlY2hub2xvZ3kgR3JvdXAxDzANBgNVBAMTBnovT1NNRjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIVt2kIawW6ko185mqXsaCulGCAwtF5sbHJdMRigs7sc66mXa0iLI6/N7UvCMq5SDD3mmGXmb2iy4lkwLVnZP8EegG07UEKw9hjcpxr3X6Ln/WJHnnJMhYO4W62vr/kNPjKzhXD+KZmaMLeZi/e+fcMubhRP66N2lb4WcwL+LeJ84Qp0i86Z/r7xmB2a8U3vPGKMR2aEtsnVTdQwRMbsZ/BZd9l6ePmXdj6Gtjb5XFJ11hdGKcPLsUghjBOCDP1Kw/JPTJRWkZFZ80LHua7zWhkwrpaO720//w69yKuGgnI/w+GBlmlwrap+xIL0bmJmE0Y2bWCntoTIfdIss1rbtokCAwEAAaMhMB8wHQYDVR0OBBYEFEtF3VkW8PL7aEYtpq1z9BTiYYh3MA0GCSqGSIb3DQEBCwUAA4IBAQBJ/0IdDTpUDMeDdgsY+jNIicveohGqkpDDjy3ImuLQbNWMStSZ6viM3ZW0gFhHLrplIcFMWrK3zItLSA5PVdWeOB4YBBoTNLn6IWjHkKw58X3kzC/4K6RP18Obmyb5trpYjmToM/JJrGZYY5aQ9tNBcHuaQ7KMEnqPvY2W01JwqTDln8hr2lQYFnWRVoc0oYF78G7Y4Ptq5ugBrBRX3PboonOW7De2WTFvkb5paLS2drueLR424gAnOI6mOx9skHQGaxNMqceGrPiCwCCf0b+P8ZqIwO1vguVbbI9LJ4Y5VbGU0+XZG7Q1XrlDKxZkY3e0yzdfPeeAJZg/Byg1JY5z</X509Certificate></X509Data></KeyInfo></Signature></server>

-Xms128M
-Xmx1024M
-Xmns24M
-Xcompressedrefs
-Xquickstart
-Xshareclasses:none
-Djava.security.properties=/etc/zosmf/servers/zosmfServer/jvm.security.override.properties
-Dcom.ibm.ws.cache.CacheConfig.filteredStatusCodes=404

